Design the Form:

Add the following controls to your form:

TextBox for entering the website or service name (txtService).

TextBox for entering the username (txtUsername).

TextBox for entering the password (txtPassword).

Button for saving the password (btnSave).

Button for retrieving the password (btnRetrieve).

Button for deleting the password (btnDelete).

ListBox to display saved passwords (lstPasswords).

Add the Code:

Here's a simple example of the code you can use:

vb.net
Imports System.IO
Imports System.Security.Cryptography
Imports System.Text

Public Class Form1
    Private Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        Dim service As String = txtService.Text
        Dim username As String = txtUsername.Text
        Dim password As String = txtPassword.Text

        If String.IsNullOrEmpty(service) OrElse String.IsNullOrEmpty(username) OrElse String.IsNullOrEmpty(password) Then
            MessageBox.Show("Please fill in all fields.")
            Return
        End If

        Dim encryptedPassword As String = Encrypt(password)
        Dim entry As String = $"{service},{username},{encryptedPassword}"

        File.AppendAllText("passwords.txt", entry & Environment.NewLine)
        lstPasswords.Items.Add(service)
        ClearFields()
    End Sub

    Private Sub btnRetrieve_Click(sender As Object, e As EventArgs) Handles btnRetrieve.Click
        Dim service As String = lstPasswords.SelectedItem.ToString()
        Dim lines As String() = File.ReadAllLines("passwords.txt")

        For Each line As String In lines
            Dim parts As String() = line.Split(","c)
            If parts(0) = service Then
                txtService.Text = parts(0)
                txtUsername.Text = parts(1)
                txtPassword.Text = Decrypt(parts(2))
                Return
            End If
        Next

        MessageBox.Show("Service not found.")
    End Sub

    Private Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        Dim service As String = lstPasswords.SelectedItem.ToString()
        Dim lines As List(Of String) = File.ReadAllLines("passwords.txt").ToList()

        For i As Integer = 0 To lines.Count - 1
            Dim parts As String() = lines(i).Split(","c)
            If parts(0) = service Then
                lines.RemoveAt(i)
                File.WriteAllLines("passwords.txt", lines)
                lstPasswords.Items.Remove(service)
                ClearFields()
                Return
            End If
        Next

        MessageBox.Show("Service not found.")
    End Sub

    Private Sub ClearFields()
        txtService.Clear()
        txtUsername.Clear()
        txtPassword.Clear()
    End Sub

    Private Function Encrypt(plainText As String) As String
        Dim key As Byte() = Encoding.UTF8.GetBytes("your-encryption-key")
        Using aes As Aes = Aes.Create()
            aes.Key = key
            aes.IV = New Byte(aes.BlockSize \ 8 - 1) {}
            Using encryptor As ICryptoTransform = aes.CreateEncryptor(aes.Key, aes.IV)
                Using ms As New MemoryStream()
                    Using cs As New CryptoStream(ms, encryptor, CryptoStreamMode.Write)
                        Using sw As New StreamWriter(cs)
                            sw.Write(plainText)
                        End Using
                    End Using
                    Return Convert.ToBase64String(ms.ToArray())
                End Using
            End Using
        End Using
    End Function

    Private Function Decrypt(encryptedText As String) As String
        Dim key As Byte() = Encoding.UTF8.GetBytes("your-encryption-key")
        Using aes As Aes = Aes.Create()
            aes.Key = key
            aes.IV = New Byte(aes.BlockSize \ 8 - 1) {}
            Using decryptor As ICryptoTransform = aes.CreateDecryptor(aes.Key, aes.IV)
                Using ms As New MemoryStream(Convert.FromBase64String(encryptedText))
                    Using cs As New CryptoStream(ms, decryptor, CryptoStreamMode.Read)
                        Using sr As New StreamReader(cs)
                            Return sr.ReadToEnd()
                        End Using
                    End Using
                End Using
            End Using
        End Using
    End Function
End Class